"use strict";(self.webpackChunkblur_engine_lua_docs=self.webpackChunkblur_engine_lua_docs||[]).push([[2561],{2893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=t(4848),i=t(8453);const r={},l="Basic Events",o={id:"tutorials/event-basics",title:"Basic Events",description:"There are two kinds of events present in BlurEngine. The distinction between them currently is a bit lacking.",source:"@site/docs/tutorials/event-basics.md",sourceDirName:"tutorials",slug:"/tutorials/event-basics",permalink:"/blurengine-docs/docs/tutorials/event-basics",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Console Commands",permalink:"/blurengine-docs/docs/tutorials/console-commands"},next:{title:"GUI Basics",permalink:"/blurengine-docs/docs/tutorials/gui-basics"}},a={},c=[{value:"Global Events",id:"global-events",level:2},{value:"Class instance events",id:"class-instance-events",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"basic-events",children:"Basic Events"}),"\n",(0,s.jsx)(n.p,{children:"There are two kinds of events present in BlurEngine. The distinction between them currently is a bit lacking."}),"\n",(0,s.jsx)(n.p,{children:"There are global events and events that belong to individual instances of a class."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"There are plans to unify both types of event in the future for clarity."})}),"\n",(0,s.jsx)(n.h2,{id:"global-events",children:"Global Events"}),"\n",(0,s.jsxs)(n.p,{children:["You can find a list of them ",(0,s.jsx)(n.a,{href:"../category/events",children:"here"}),". Global events usually are called when something significant to do with the entire engine occurs. For example, a frame is about to be drawn. This calls the ",(0,s.jsx)(n.a,{href:"../api/events/event_render",children:"render()"})," event."]}),"\n",(0,s.jsxs)(n.p,{children:["To listen to these events, you use ",(0,s.jsx)(n.a,{href:"../api/libraries/library_event",children:"event.link()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",metastring:'title="scripts/script.lua"',children:'event.link("render", "a-unique-identifier", function(tile_renderer)\n    print("Hello World!")\nend)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The code snippet above will link a function to the 'render' event. This function will print ",(0,s.jsx)(n.code,{children:'"Hello World!"'})," every frame."]}),"\n",(0,s.jsxs)(n.p,{children:["You can also register your own events through ",(0,s.jsx)(n.a,{href:"../api/libraries/library_event",children:"event.register()"})," and call them using ",(0,s.jsx)(n.a,{href:"../api/libraries/library_event",children:"event.call()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",metastring:'title="scripts/script.lua"',children:'-- You cannot link against events that are not registered.\n-- This function will be ignored and a warning will be output in the console.\nevent.link("custom_event", "event_handler_1", function()\n    print("Foo")\nend)\n\nevent.register("custom_event")\n\nevent.link("custom_event", "event_handler_2", function(a, b)\n    local sum = a + b\n    print("Sum of arguments: ".. tostring(sum))\nend)\n\nevent.call("custom_event", 2, 2)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When the above code is run the console output should be: ",(0,s.jsx)(n.code,{children:"Sum of arguments: 4"})]}),"\n",(0,s.jsx)(n.h2,{id:"class-instance-events",children:"Class instance events"}),"\n",(0,s.jsx)(n.p,{children:"This type of event is linked against completely differently."}),"\n",(0,s.jsx)(n.p,{children:"Both types of event use the same class in the underlying code which is why both are called events."}),"\n",(0,s.jsx)(n.p,{children:"From the perspective of a Lua API programmer, these events are methods that are called by the engine."}),"\n",(0,s.jsxs)(n.p,{children:["Currently, whatever method is stored at ",(0,s.jsx)(n.code,{children:"class_instance.event_name"})," is the one that will be called by the event."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",metastring:'title="scripts/script.lua"',children:'local object = GUI.new("WindowGUI")\n\n-- linking to an event\nfunction object:onScrolled(scrollX, scrollY)\n    print("Horizontal scroll: "..tostring(scrollX))\n    print("Vertical scroll: "..tostring(scrollY))\nend\n\n-- runs the function after a delay of 5 seconds\ndelay(5, function()\n    -- the function will no longer be called when the event is called\n    object.onScrolled = nil\nend)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);