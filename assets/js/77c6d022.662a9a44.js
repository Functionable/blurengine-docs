"use strict";(self.webpackChunkblur_engine_lua_docs=self.webpackChunkblur_engine_lua_docs||[]).push([[6398],{1689:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var s=e(4848),t=e(8453);const i={title:"string Library",summary:"string Library",pagination_next:null,pagination_prev:null},d=void 0,c={id:"api/libraries/library_string",title:"string Library",description:"This is a standard Lua library that aids with string manipulation",source:"@site/docs/api/libraries/library_string.md",sourceDirName:"api/libraries",slug:"/api/libraries/library_string",permalink:"/blurengine-docs/docs/api/libraries/library_string",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"string Library",summary:"string Library",pagination_next:null,pagination_prev:null},sidebar:"apiSidebar"},l={},h=[];function a(n){const r={a:"a",code:"code",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:"This is a standard Lua library that aids with string manipulation"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"numbers"})," byte( ",(0,s.jsx)(r.strong,{children:"string"})," s, ",(0,s.jsx)(r.strong,{children:"number"})," startIndex, ",(0,s.jsx)(r.strong,{children:"number"})," endIndex )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns numeric codes of characters between given indices in a string. Both ",(0,s.jsx)(r.code,{children:"startIndex"})," and ",(0,s.jsx)(r.code,{children:"endIndex"})," are entirely optional arguments."]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," char( ",(0,s.jsx)(r.strong,{children:"variable"})," values )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:"Takes an arbitrary amount of number arguments. It returns a string with each character's code corresponding to the argument given"})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," dump( ",(0,s.jsx)(r.strong,{children:"function"})," function, ",(0,s.jsx)(r.strong,{children:"bool"})," strip )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns a string containing the binary representation of a given function. If ",(0,s.jsx)(r.code,{children:"strip"})," is specified and is set to true, the binary output may not have all debug information"]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"numbers"})," find( ",(0,s.jsx)(r.strong,{children:"string"})," s, ",(0,s.jsx)(r.strong,{children:"string"})," pattern, ",(0,s.jsx)(r.strong,{children:"number"})," i, ",(0,s.jsx)(r.strong,{children:"bool"})," plain )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Both ",(0,s.jsx)(r.code,{children:"i"})," and ",(0,s.jsx)(r.code,{children:"plain"})," are optional arguments. This function searches string ",(0,s.jsx)(r.code,{children:"s"})," for ",(0,s.jsx)(r.code,{children:"pattern"}),", starting from ",(0,s.jsx)(r.code,{children:"i"})," (assumed to be 1 if not specified). If ",(0,s.jsx)(r.code,{children:"plain"})," is specified and ",(0,s.jsx)(r.code,{children:"true"})," then no special pattern matching is done and this function simply searches for ",(0,s.jsx)(r.code,{children:"pattern"})," in the string. The start and end of the first found occurence are returned. Pattern matching is done according to the section ",(0,s.jsx)(r.a,{href:"https://www.lua.org/manual/5.4/manual.html#6.4.1",children:"here"}),"."]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," format( ",(0,s.jsx)(r.strong,{children:"string"})," fmt )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Formats a string in the same fashion as C's ",(0,s.jsx)(r.code,{children:"sprintf"})," would. Any number of variables after ",(0,s.jsx)(r.code,{children:"fmt"})," may be passed."]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"function"})," gmatch(  )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns an interator function that returns the next capture from the pattern each time it is called. The ",(0,s.jsx)(r.code,{children:"pattern"})," specification is ",(0,s.jsx)(r.a,{href:"https://www.lua.org/manual/5.3/manual.html#6.4.1",children:"here"}),"."]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," gsub( ",(0,s.jsx)(r.strong,{children:"string"})," s, ",(0,s.jsx)(r.strong,{children:"string"})," pattern, ",(0,s.jsx)(r.strong,{children:"any"})," repl, ",(0,s.jsx)(r.strong,{children:"number"})," n )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["To understand how this function works, I recommend you read ",(0,s.jsx)(r.a,{href:"https://www.lua.org/manual/5.3/manual.html#pdf-string.gsub",children:"this"}),"."]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"number"})," len( ",(0,s.jsx)(r.strong,{children:"string"})," s )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:"Returns the length of a given string."})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," lower( ",(0,s.jsx)(r.strong,{children:"string"})," string )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:"Returns a copy of the string given with all possible letters set to lowercase."})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:["match( ",(0,s.jsx)(r.strong,{children:"string"})," s, ",(0,s.jsx)(r.strong,{children:"string"})," pattern, ",(0,s.jsx)(r.strong,{children:"number"})," index )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Searches the string for the first match of a given pattern. Starts from the optional ",(0,s.jsx)(r.code,{children:"index"}),". Rules of ",(0,s.jsx)(r.code,{children:"format"})," are ",(0,s.jsx)(r.a,{href:"https://www.lua.org/manual/5.3/manual.html#6.4.1",children:"here"})]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," pack( ",(0,s.jsx)(r.strong,{children:"string"})," fmt, ",(0,s.jsx)(r.strong,{children:"variable"})," values )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Many variables may be specified after ",(0,s.jsx)(r.code,{children:"fmt"}),". The function returns a binary string containing all the values but serialized. The format used for ",(0,s.jsx)(r.code,{children:"fmt"})," can be found ",(0,s.jsx)(r.a,{href:"https://www.lua.org/manual/5.4/manual.html#6.4.2",children:"here"})]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"number"})," packsize( ",(0,s.jsx)(r.strong,{children:"string"})," format )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns the size of a string that would result from a given ",(0,s.jsx)(r.code,{children:"format"})]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," rep( ",(0,s.jsx)(r.strong,{children:"string"})," s, ",(0,s.jsx)(r.strong,{children:"integer"})," n, ",(0,s.jsx)(r.strong,{children:"string"})," sep )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns a string that is the concatenation of ",(0,s.jsx)(r.code,{children:"n"})," copies of string ",(0,s.jsx)(r.code,{children:"s"})," separated by ",(0,s.jsx)(r.code,{children:"sep"})," (which is optional, and if missing is assumed to be an empty string)"]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," reverse( ",(0,s.jsx)(r.strong,{children:"string"})," string )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:"Returns a reversed copy of a given string"})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," sub( ",(0,s.jsx)(r.strong,{children:"string"})," string, ",(0,s.jsx)(r.strong,{children:"number"})," i, ",(0,s.jsx)(r.strong,{children:"number"})," j )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns a substring between ",(0,s.jsx)(r.code,{children:"i"})," and ",(0,s.jsx)(r.code,{children:"j"}),". The argument ",(0,s.jsx)(r.code,{children:"j"})," is optional"]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"number"})," unpack( ",(0,s.jsx)(r.strong,{children:"string"})," fmt, ",(0,s.jsx)(r.strong,{children:"string"})," s, ",(0,s.jsx)(r.strong,{children:"integer"})," pos )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.td,{children:["Returns values packed in string s, according to ",(0,s.jsx)(r.code,{children:"string.pack"}),", and ",(0,s.jsx)(r.a,{href:"https://www.lua.org/manual/5.3/manual.html#6.4.2",children:"format string"})," ",(0,s.jsx)(r.code,{children:"fmt"}),". The optional argument ",(0,s.jsx)(r.code,{children:"pos"})," specifies where to start reading from (1 by default)."]})})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsx)(r.tr,{children:(0,s.jsxs)(r.th,{children:[(0,s.jsx)(r.strong,{children:"string"})," upper( ",(0,s.jsx)(r.strong,{children:"string"})," string )"]})})}),(0,s.jsx)(r.tbody,{children:(0,s.jsx)(r.tr,{children:(0,s.jsx)(r.td,{children:"Returns a copy of this string with all the letters turned uppercase."})})})]})]})}function o(n={}){const{wrapper:r}={...(0,t.R)(),...n.components};return r?(0,s.jsx)(r,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},8453:(n,r,e)=>{e.d(r,{R:()=>d,x:()=>c});var s=e(6540);const t={},i=s.createContext(t);function d(n){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function c(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:d(n.components),s.createElement(i.Provider,{value:r},n.children)}}}]);